import pandas as pd
import plotly.express as px
import dash
from dash import dcc, html, dash_table
from dash.dependencies import Input, Output

# Cargar los datos
df = pd.read_excel("FH_areas_interes.xlsx", sheet_name="Sheet1", engine="openpyxl")

# Hacer los enlaces clicables
df["Enlace"] = df["Enlace"].apply(lambda x: f"[Ver art칤culo]({x})")

# Inicializar la aplicaci칩n Dash
app = dash.Dash(__name__)
server = app.server  # Necesario para Render

# Dise침o de la aplicaci칩n
app.layout = html.Div([
    html.H1("游닄 Art칤culos de la Revista Farmacia Hospitalaria", style={'textAlign': 'center', 'color': '#4A90E2'}),

    html.Label("游댍 Filtrar por Categor칤a:", style={'fontSize': '18px'}),
    dcc.Dropdown(
        id="categoria-filter",
        options=[{"label": cat, "value": cat} for cat in sorted(df["Categor칤a"].unique())],
        multi=True,
        placeholder="Selecciona una categor칤a...",
        style={'marginBottom': '20px'}
    ),

    dash_table.DataTable(
        id="articulos-table",
        columns=[
            {"name": "A침o - Volumen - N칰mero", "id": "A침o - Volumen - N칰mero"},
            {"name": "T칤tulo", "id": "T칤tulo"},
            {"name": "Categor칤a", "id": "Categor칤a"},
            {"name": "Enlace", "id": "Enlace", "presentation": "markdown"},
        ],
        style_table={'overflowX': 'auto', 'marginBottom': '20px'},
        style_cell={'textAlign': 'left', 'padding': '10px', 'fontSize': '14px'},
        style_header={'backgroundColor': '#4A90E2', 'color': 'white', 'fontWeight': 'bold'},
        page_size=10,
        markdown_options={"link_target": "_blank"}  # Abre enlaces en nueva pesta침a
    ),

    dcc.Graph(id="categoria-chart")
])

# Callback para actualizar la tabla y el gr치fico
@app.callback(
    [Output("articulos-table", "data"),
     Output("categoria-chart", "figure")],
    [Input("categoria-filter", "value")]
)
def update_dashboard(selected_categories):
    filtered_df = df.copy()
    if selected_categories:
        filtered_df = filtered_df[filtered_df["Categor칤a"].isin(selected_categories)]

    # Crear gr치fico mejorado
    category_counts = filtered_df["Categor칤a"].value_counts().reset_index()
    category_counts.columns = ["Categor칤a", "N칰mero de Art칤culos"]
    fig = px.bar(category_counts,
                 x="Categor칤a", y="N칰mero de Art칤culos",
                 title="游늵 N칰mero de Art칤culos por Categor칤a",
                 color="N칰mero de Art칤culos",
                 color_continuous_scale="Blues",
                 template="simple_white")

    fig.update_layout(xaxis_tickangle=-45)

    return filtered_df.to_dict("records"), fig

if __name__ == "__main__":
    app.run_server(debug=True)
